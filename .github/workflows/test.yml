name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros-distribution: [jazzy]
        python-version: ["3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup ROS 2 environment
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ matrix.ros-distribution }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-rosdep python3-colcon-common-extensions

    - name: Initialize rosdep
      run: |
        sudo rosdep init || true
        rosdep update

    - name: Install ROS 2 Python dependencies
      run: |
        source /opt/ros/${{ matrix.ros-distribution }}/setup.bash
        pip install -U rosbag2-py rclpy rosidl-runtime-py

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        source /opt/ros/${{ matrix.ros-distribution }}/setup.bash
        uv sync --dev

    - name: Run tests
      run: |
        source /opt/ros/${{ matrix.ros-distribution }}/setup.bash
        uv run pytest

    - name: Upload coverage reports to Codecov (Python 3.12 + ROS2 Jazzy only)
      if: matrix.python-version == '3.12' && matrix.ros-distribution == 'jazzy'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
